(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,d=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?r.a.createElement(d,l({ref:t},s,{components:n})):r.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),i=(n(0),n(113)),c={id:"license-scanners",title:"License Scanners",sidebar_label:"license-scanners"},l={id:"license-scanners",title:"License Scanners",description:"* License scanners are implemented per package manager.",source:"@site/docs/license-scanners.md",permalink:"/barista/docs/license-scanners",sidebar_label:"license-scanners",sidebar:"someSidebar",previous:{title:"System Architecture",permalink:"/barista/docs/architecture"},next:{title:"License Implementation",permalink:"/barista/docs/licenses"}},o=[{value:"NPM",id:"npm",children:[]},{value:"Maven",id:"maven",children:[]},{value:"Nuget",id:"nuget",children:[]},{value:"Python v2.7.17 & v3.7.5",id:"python-v2717--v375",children:[]},{value:"Go",id:"go",children:[]},{value:"None",id:"none",children:[]}],s={rightToc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"License scanners are implemented per package manager."),Object(i.b)("li",{parentName:"ul"},"The package manager type should be specifed by the project so that the correct license detection mechanism can be used."),Object(i.b)("li",{parentName:"ul"},"If a package manager is not specified then a best effort detection attempt is made using common norms for each package manager.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"e.g. does a package.json or pom.xml exist in the project root?")))),Object(i.b)("h2",{id:"npm"},"NPM"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/davglass/license-checker"}),"License Checker"))),Object(i.b)("h2",{id:"maven"},"Maven"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.mojohaus.org/license-maven-plugin/aggregate-download-licenses-mojo.html"}),"License Maven Plugin"))),Object(i.b)("h2",{id:"nuget"},"Nuget"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A custom solution that combines fetching the specified license if one is not stored locally and then interrogating the local ",Object(i.b)("inlineCode",{parentName:"li"},".nuspec")," package files using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/nexB/scancode-toolkit"}),"Scan Code"))),Object(i.b)("h2",{id:"python-v2717--v375"},"Python v2.7.17 & v3.7.5"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/raimon49/pip-licenses"}),"pip_licenses-1.15.2"))),Object(i.b)("h2",{id:"go"},"Go"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/google/go-licenses"}),"go-licenses"))),Object(i.b)("h2",{id:"none"},"None"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"If a project does not specify a package manager or one cannot be detected, then the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/nexB/scancode-toolkit"}),"Scan Code")," toolkit is used to scan the individual files."),Object(i.b)("li",{parentName:"ul"},"This approach is considered inefficient and computationally expensive."),Object(i.b)("li",{parentName:"ul"},"Scan code results can be exceedingly verbose, reporting a license detection for every file.")),Object(i.b)("h1",{id:"general-license-logic"},"General License Logic"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Licenses are loaded from the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://spdx.org/"}),"SPDX")," database.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"See: ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"../../barista-api/docs/licenses.md"}),"Licenses")," in the ",Object(i.b)("inlineCode",{parentName:"li"},"barista-api")," documentation."))),Object(i.b)("li",{parentName:"ul"},"Licenses are first checked by comparing their name with a known SPDX license expression using the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/package/spdx-correct"}),"SPDX-Correct")," library."),Object(i.b)("li",{parentName:"ul"},"If an SPDX identifier cannot be inferred from the string detected by the license scanner, then a fuzzy match is attempted using the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/package/string-similarity"}),"string-similarity")," library.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},'A similarity score of 20% or more is required to be deemed "similar"'),Object(i.b)("li",{parentName:"ul"},"If there is more than one match detected, the match with the highest similarity score is taken."),Object(i.b)("li",{parentName:"ul"},'If a license is "fuzzy matched" then a ',Object(i.b)("inlineCode",{parentName:"li"},".fuzzyMatched")," Boolean is set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," on the license scan result item in case the result needs to be reviewed by a human later."))),Object(i.b)("li",{parentName:"ul"},"If a detected license cannot be matched against an existing license in the system, then a new license is created."),Object(i.b)("li",{parentName:"ul"},"If a new license is created the a ",Object(i.b)("inlineCode",{parentName:"li"},".unknownLicense")," Boolean is set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," on the license in case it needs to be reviewed by a human later.")))}b.isMDXComponent=!0}}]);